<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Servlet on Aroong&#39;s Blog</title>
    <link>https://aroong.github.io/tags/servlet/</link>
    <description>Recent content in Servlet on Aroong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://aroong.github.io/tags/servlet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Servlet 1 - Servlet 기본</title>
      <link>https://aroong.github.io/spring-mvc/1.-servlet1/</link>
      <pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://aroong.github.io/spring-mvc/1.-servlet1/</guid>
      <description>스프링 백앤드 공부를 하기위해 인프런 강의를 듣기 시작했다.
정리 안해두면 다 까먹으니 시간이 걸리더라도 기록을 해봄. (이론 말고 실습 위주)
스프링 MVC, 웹 백앤드를 익히기 위해 제일 기본이 되는 서블릿부터 시작해서 점점 올라갈 예정.
[서블릿 프로젝트 생성] https://start.spring.io 사이트에서 아래와같이 Project, Project Metadata, Dependencies를 세팅하고</description>
    </item>
    
    <item>
      <title>Servlet 2 - HttpServletRequest</title>
      <link>https://aroong.github.io/spring-mvc/2.-servlet2/</link>
      <pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://aroong.github.io/spring-mvc/2.-servlet2/</guid>
      <description>Servlet 1 내용에 이어 이번에는 HttpServletRequest에 대해 좀 더 자세히 들여다 봄. (인프런 강의 듣는 중)
[HttpServletRequest 역할] HTTP 요청 메시지를 개발자가 직접 파싱해서 사용해도 되지만, 매우 불편할 것이다. 서블릿은 개발자가 HTTP 요청 메시지를 편리하게 사용할 수 있도록 개발자 대신에 HTTP 요청 메시지를 파싱한다.</description>
    </item>
    
    <item>
      <title>Servlet 3 - HTTP 요청 방식</title>
      <link>https://aroong.github.io/spring-mvc/3.-servlet3/</link>
      <pubDate>Thu, 29 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://aroong.github.io/spring-mvc/3.-servlet3/</guid>
      <description>Servlet 2에 이어 HTTP 요청 메시지를 클라이언트에서 서버로 전달하는데 사용하는 방식 3가지에 대해 알아보자. (인프런 강의 듣는 중)
[HTTP 요청 데이터 3가지 방법] GET - 쿼리 파라미터 POST - HTML Form HTTP message body (API) 1. GET - 쿼리 파라미터 hello.</description>
    </item>
    
  </channel>
</rss>
