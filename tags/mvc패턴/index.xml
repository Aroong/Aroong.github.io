<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MVC패턴 on Aroong&#39;s Blog</title>
    <link>https://aroong.github.io/tags/mvc%ED%8C%A8%ED%84%B4/</link>
    <description>Recent content in MVC패턴 on Aroong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://aroong.github.io/tags/mvc%ED%8C%A8%ED%84%B4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MVC 1 - MVC 패턴 적용</title>
      <link>https://aroong.github.io/spring-mvc/7.-mvc1/</link>
      <pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://aroong.github.io/spring-mvc/7.-mvc1/</guid>
      <description>앞에서 만든 서블릿과 JSP를 사용하여 MVC 패턴을 적용해보자. 서블릿이 컨트롤러가 되고 JSP가 뷰가 된다.
모델은 HttpServletRequest객체의 request 저장소로 보면 된다.
1. 컨트롤러 뷰 분리하기. 클라이언트의 요청은 무조건 컨트롤러를 거치도록 한다. hello.servlet.web 아래 servletmvc 패키지를 만들고 회원 등록용 컨트롤러 MvcMemberFormServlet를 만든다. 클라이언트가 /servlet-mvc/members/new-form로 요청을 하면 new-form.</description>
    </item>
    
  </channel>
</rss>
